// <auto-generated />
using System;
using CleanArchBoilerPlateAspNetCore.Infra.Data.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CleanArchBoilerPlateAspNetCore.Infra.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211115161027_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.Context", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ContextId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ProductionStartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PublicAnnouncementDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SalesOrderEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SalesOrderStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContextId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Contexts");
                });

            modelBuilder.Entity("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.ContextRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ContextRoles");
                });

            modelBuilder.Entity("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.ContextRoleUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContextId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ContextId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("ContextRoleUsers");
                });

            modelBuilder.Entity("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.Feature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Features");
                });

            modelBuilder.Entity("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.FeatureAllocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContextId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EffectivityEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EffectivityStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FeatureValueId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContextId");

                    b.HasIndex("FeatureValueId");

                    b.ToTable("FeatureAllocations");
                });

            modelBuilder.Entity("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.FeatureGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("FeatureGroups");
                });

            modelBuilder.Entity("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.FeatureValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FeatureId")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FeatureId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("FeatureValues");
                });

            modelBuilder.Entity("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.Gate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FeatureId")
                        .HasColumnType("int");

                    b.Property<int>("FeatureValueId")
                        .HasColumnType("int");

                    b.Property<int?>("GateRootId")
                        .HasColumnType("int");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<string>("InsertKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsNot")
                        .HasColumnType("bit");

                    b.Property<int>("NodeType")
                        .HasColumnType("int");

                    b.Property<int>("Operator")
                        .HasColumnType("int");

                    b.Property<int>("ParentIndex")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FeatureId");

                    b.HasIndex("FeatureValueId");

                    b.HasIndex("GateRootId");

                    b.ToTable("Gates");
                });

            modelBuilder.Entity("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.Matrix", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ContextId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdContext")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContextId");

                    b.ToTable("Matrices");
                });

            modelBuilder.Entity("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.MatrixColumn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FeatureId")
                        .HasColumnType("int");

                    b.Property<int>("IdFeature")
                        .HasColumnType("int");

                    b.Property<int>("IdMatrix")
                        .HasColumnType("int");

                    b.Property<int?>("MatrixId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FeatureId");

                    b.HasIndex("MatrixId");

                    b.ToTable("MatrixColumns");
                });

            modelBuilder.Entity("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.MatrixRow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FeatureId")
                        .HasColumnType("int");

                    b.Property<int>("IdFeature")
                        .HasColumnType("int");

                    b.Property<int>("IdMatrix")
                        .HasColumnType("int");

                    b.Property<int?>("MatrixId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FeatureId");

                    b.HasIndex("MatrixId");

                    b.ToTable("MatrixRows");
                });

            modelBuilder.Entity("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.Rule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GateThenId")
                        .HasColumnType("int");

                    b.Property<int>("GateWhenId")
                        .HasColumnType("int");

                    b.Property<int>("MatrixId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RuleType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GateThenId")
                        .IsUnique();

                    b.HasIndex("GateWhenId")
                        .IsUnique();

                    b.HasIndex("MatrixId");

                    b.ToTable("Rules");
                });

            modelBuilder.Entity("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Departement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ContextFeatureValue", b =>
                {
                    b.Property<int>("ContextsId")
                        .HasColumnType("int");

                    b.Property<int>("CoreFeaturesId")
                        .HasColumnType("int");

                    b.HasKey("ContextsId", "CoreFeaturesId");

                    b.HasIndex("CoreFeaturesId");

                    b.ToTable("ContextFeatureValue");
                });

            modelBuilder.Entity("FeatureGroupFeatureValue", b =>
                {
                    b.Property<int>("FeatureGroupsId")
                        .HasColumnType("int");

                    b.Property<int>("FeatureValuesId")
                        .HasColumnType("int");

                    b.HasKey("FeatureGroupsId", "FeatureValuesId");

                    b.HasIndex("FeatureValuesId");

                    b.ToTable("FeatureGroupFeatureValue");
                });

            modelBuilder.Entity("FeatureValueTag", b =>
                {
                    b.Property<int>("FeatureValuesId")
                        .HasColumnType("int");

                    b.Property<int>("TagsId")
                        .HasColumnType("int");

                    b.HasKey("FeatureValuesId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("FeatureValueTag");
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.Property<int>("RolesId")
                        .HasColumnType("int");

                    b.Property<string>("UsersId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RolesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("RoleUser");
                });

            modelBuilder.Entity("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.Context", b =>
                {
                    b.HasOne("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.Context", "PreviousContext")
                        .WithMany()
                        .HasForeignKey("ContextId");

                    b.Navigation("PreviousContext");
                });

            modelBuilder.Entity("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.ContextRoleUser", b =>
                {
                    b.HasOne("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.Context", "Context")
                        .WithMany("ContextRoleUsers")
                        .HasForeignKey("ContextId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.ContextRole", "ContextRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.User", "User")
                        .WithMany("ContextRoleUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Context");

                    b.Navigation("ContextRole");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.FeatureAllocation", b =>
                {
                    b.HasOne("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.Context", "Context")
                        .WithMany("FeaturesAllocations")
                        .HasForeignKey("ContextId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.FeatureValue", "FeatureValue")
                        .WithMany()
                        .HasForeignKey("FeatureValueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Context");

                    b.Navigation("FeatureValue");
                });

            modelBuilder.Entity("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.FeatureValue", b =>
                {
                    b.HasOne("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.Feature", "Feature")
                        .WithMany("FeatureValues")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feature");
                });

            modelBuilder.Entity("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.Gate", b =>
                {
                    b.HasOne("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.Feature", "Feature")
                        .WithMany()
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.FeatureValue", "FeatureValue")
                        .WithMany()
                        .HasForeignKey("FeatureValueId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.Gate", "GateRoot")
                        .WithMany()
                        .HasForeignKey("GateRootId");

                    b.Navigation("Feature");

                    b.Navigation("FeatureValue");

                    b.Navigation("GateRoot");
                });

            modelBuilder.Entity("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.Matrix", b =>
                {
                    b.HasOne("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.Context", "Context")
                        .WithMany()
                        .HasForeignKey("ContextId");

                    b.Navigation("Context");
                });

            modelBuilder.Entity("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.MatrixColumn", b =>
                {
                    b.HasOne("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.Feature", "Feature")
                        .WithMany()
                        .HasForeignKey("FeatureId");

                    b.HasOne("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.Matrix", "Matrix")
                        .WithMany("MatrixColumns")
                        .HasForeignKey("MatrixId");

                    b.Navigation("Feature");

                    b.Navigation("Matrix");
                });

            modelBuilder.Entity("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.MatrixRow", b =>
                {
                    b.HasOne("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.Feature", "Feature")
                        .WithMany()
                        .HasForeignKey("FeatureId");

                    b.HasOne("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.Matrix", "Matrix")
                        .WithMany("MatrixRows")
                        .HasForeignKey("MatrixId");

                    b.Navigation("Feature");

                    b.Navigation("Matrix");
                });

            modelBuilder.Entity("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.Rule", b =>
                {
                    b.HasOne("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.Gate", "GateThen")
                        .WithOne()
                        .HasForeignKey("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.Rule", "GateThenId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.Gate", "GateWhen")
                        .WithOne()
                        .HasForeignKey("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.Rule", "GateWhenId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.Matrix", "Matrix")
                        .WithMany()
                        .HasForeignKey("MatrixId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GateThen");

                    b.Navigation("GateWhen");

                    b.Navigation("Matrix");
                });

            modelBuilder.Entity("ContextFeatureValue", b =>
                {
                    b.HasOne("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.Context", null)
                        .WithMany()
                        .HasForeignKey("ContextsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.FeatureValue", null)
                        .WithMany()
                        .HasForeignKey("CoreFeaturesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FeatureGroupFeatureValue", b =>
                {
                    b.HasOne("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.FeatureGroup", null)
                        .WithMany()
                        .HasForeignKey("FeatureGroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.FeatureValue", null)
                        .WithMany()
                        .HasForeignKey("FeatureValuesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FeatureValueTag", b =>
                {
                    b.HasOne("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.FeatureValue", null)
                        .WithMany()
                        .HasForeignKey("FeatureValuesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.HasOne("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.Context", b =>
                {
                    b.Navigation("ContextRoleUsers");

                    b.Navigation("FeaturesAllocations");
                });

            modelBuilder.Entity("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.Feature", b =>
                {
                    b.Navigation("FeatureValues");
                });

            modelBuilder.Entity("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.Matrix", b =>
                {
                    b.Navigation("MatrixColumns");

                    b.Navigation("MatrixRows");
                });

            modelBuilder.Entity("CleanArchBoilerPlateAspNetCore.Core.Domain.Models.User", b =>
                {
                    b.Navigation("ContextRoleUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
